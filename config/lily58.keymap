/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// Urob includes
#include "../zmk-nodefree-config/helper.h"

// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Personal includes
#include "includes/settings.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"

/ {
    combos {
        compatible = "zmk,combos";

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <36 49>;
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <54 53 0 12 24 36 11 23 35 49 37 48>;
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <50 52 51 53 54 55 56 57>;
        };

        hold_tap_back: hold_tap_back {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_BACK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <54 53 0 12 24 36 11 23 35 49 37 48>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  F   |  P   |  G   |                   |  J   |  L    |  U    |  Y   |   ;   |   -   |
            // |  CTRL |  A  |  R  |  S   |  T   |  D   |                   |  H   |  N    |  E    |  I   |   O   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  K   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  BSPC |  | SPACE | RAISE| ENTER  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                                                                                 &kp N6                   &kp N7         &kp N8             &kp N9   &kp N0    &kp MINUS
&kp GRAVE   &kp Q   &kp W   &kp F         &kp P         &kp G                                                                                  &kp J                    &kp L          &kp U              &kp Y    &kp SEMI  &kp BACKSLASH
&caps_word  &kp A   &kp R   &kp S         &kp T         &kp D                                                                                  &kp H                    &kp N          &kp E              &kp I    &kp O     &kp SQT
&kp LSHFT   &kp Z   &kp X   &kp C         &kp V         &kp B                  &kp LBKT                            &kp RBKT                    &kp K                    &kp M          &kp COMMA          &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LEFT_WIN  &kp LEFT_ALT  &hold_tap_layer 1 TAB  &hold_tap LEFT_CONTROL BACKSPACE    &hold_tap LEFT_SHIFT SPACE  &hold_tap_layer 2 ENTER  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav+bt {
            bindings = <
&trans  &trans      &trans       &trans        &trans       &trans                                      &trans             &trans           &trans         &trans              &trans      &trans
&trans  &bt BT_CLR  &kp LA(TAB)  &kp UP_ARROW  &kp LG(TAB)  &kp C_PLAY_PAUSE                            &kp C_VOLUME_UP    &kp PRINTSCREEN  &kp PAGE_UP    &kp LC(LA(ESCAPE))  &kp DELETE  &trans
&trans  &kp F1      &kp LEFT     &kp DOWN      &kp RIGHT    &kp K_MUTE                                  &kp C_VOLUME_DOWN  &kp HOME         &kp PAGE_DOWN  &kp END             &kp F12     &trans
&trans  &kp F2      &kp F3       &kp F4        &kp F5       &kp F6            &bt BT_PRV    &bt BT_NXT  &kp F7             &kp F8           &kp F9         &kp F10             &kp F11     &trans
                                 &trans        &trans       &trans            &trans        &trans      &trans             &trans           &trans
            >;
        };

        num+char {
            bindings = <
&trans  &trans           &trans        &trans                &trans                 &trans                                       &trans        &trans            &trans             &trans          &trans        &trans
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4           &kp N5                                       &kp NUMBER_6  &kp N7            &kp N8             &kp N9          &kp N0        &trans
&trans  &kp DOLLAR       &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN                                  &kp PIPE      &kp MINUS         &kp EQUAL          &kp UNDERSCORE  &kp ASTERISK  &trans
&trans  &kp EXCLAMATION  &kp HASH      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE    &kp RC(RS(C))    &kp LC(LS(V))  &kp AMPS      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT     &kp CARET     &trans
                                       &trans                &trans                 &trans       &trans           &trans         &trans        &trans            &trans
            >;
        };
    };
};
